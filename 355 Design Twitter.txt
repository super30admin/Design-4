//355. Design Twitter

// Time Complexity o(n) Space Compleity o(n)
class Twitter {
    int t=1;
    class Tweet{
        int tid;
        int time;
        public Tweet(int tid,int time){
            this.tid = tid;
            this.time=time;
        }
    }
    HashMap<Integer,ArrayList<Tweet>> tweets;
    HashMap<Integer,HashSet<Integer>> follow;

    public Twitter() {
       tweets = new HashMap<>();
       follow = new HashMap<>();
    }

    public void postTweet(int userId, int tweetId) {

        if(!tweets.containsKey(userId)){
           ArrayList<Tweet> li = new ArrayList<>();
           tweets.put(userId,li);
           follow(userId,userId);
        }
        tweets.get(userId).add(new Tweet(tweetId,t));
        t++;
    }

    public List<Integer> getNewsFeed(int userId) {
    PriorityQueue<Tweet> q = new PriorityQueue<>((a, b) -> a.time - b.time);
    HashSet<Integer> fid = follow.get(userId);

    if (fid != null) {
        for (Integer f : fid) {
            ArrayList<Tweet> tweet = tweets.get(f);

            if (tweet != null) {
                for (Tweet t : tweet) {
                    q.add(t);

                    if (q.size() > 10) {
                        q.poll();
                    }
                }
            }
        }
    }

    List<Integer> res = new ArrayList<>();
    Stack<Integer> stack = new Stack<>();

    while (!q.isEmpty()) {
        stack.push(q.poll().tid);
    }

    while (!stack.isEmpty()) {
        res.add(stack.pop());
    }

    return res;
}


    public void follow(int followerId, int followeeId) {
        if(!follow.containsKey(followerId)){
            HashSet<Integer> li = new HashSet<>();
            follow.put(followerId,li);
        } 
        follow.get(followerId).add(followeeId);
    }

    public void unfollow(int followerId, int followeeId) {
        if(follow.containsKey(followerId) && followerId != followeeId){
           follow.get(followerId).remove(followeeId);
        }
    }
}

/**
 * Your Twitter object will be instantiated and called as such:
 * Twitter obj = new Twitter();
 * obj.postTweet(userId,tweetId);
 * List<Integer> param_2 = obj.getNewsFeed(userId);
 * obj.follow(followerId,followeeId);
 * obj.unfollow(followerId,followeeId);
 */