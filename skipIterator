// https://leetcode.com/discuss/interview-question/341818

class SkipIterator implements Iterator<Integer> {
   HashMap<Integer,Integer> map;
    Iterator<Integer> it;
    Integer nextE;
    
    

    public SkipIterator(Iterator<Integer> it) {
      map = new HashMap<>();
      this.it = it;
        advance();
    }

    @Override
    public boolean hasNext() {
      return nextE !=null;
    }

    @Override
    public Integer next() {
            Integer result = nextE;
            advance();
            return result;
        
    }

    public void skip(int num) {
       if(num == nextE)
           advance();
        else
        map.put(num,map.getOrDefault(num,0) +1);
    }

    private void advance() {
        nextE =null;
        while(nextE == null && it.hasNext()){
            Integer el = it.next();
            if(!map.containsKey(nextE))
                nextE = el;
            else{
                map.put(el,map.get(el)-1);
                map.remove(el,0);
            }
        }
  
        
    }
}

public class Main {
        public static void main(String[] args) {
        SkipIterator it = new SkipIterator(Arrays.asList(1, 2, 3).iterator());
        System.out.println(it.hasNext());
        it.skip(2);
        it.skip(1);
        it.skip(3);
        System.out.println(it.hasNext());
    }
}