class Twitter {

    class tweet{
        int id;
        int tweetTime;
        public tweet(int id, int time){
            this.id = id;
            this.tweetTime = time;
        }
    }

    HashMap<Integer, HashSet<Integer>> follow = new HashMap<>();
    HashMap<Integer, List<tweet>> tweets = new HashMap<>();
    int time = 0;

    public Twitter() {
        
    }
    
       //O(1)
    public void postTweet(int userId, int tweetId) {
        
        follow(userId,userId);

        
        if(!tweets.containsKey(userId)){
                tweets.put(userId,new ArrayList<>());
        }

        tweets.get(userId).add(new tweet(tweetId,time++));


    }
    
    //O(n)
    public List<Integer> getNewsFeed(int userId) {
        
        PriorityQueue<tweet> pq = new PriorityQueue<>((a,b) ->  a.tweetTime - b.tweetTime);
        HashSet<Integer> userFollowsSet = follow.get(userId);

        //null check 
        if(userFollowsSet != null){

            for(int num : userFollowsSet){
            List<tweet> getFolloweeTweets = tweets.get(num);

            //null check
            if(getFolloweeTweets != null){
                for(tweet t : getFolloweeTweets){
                pq.add(t);
                if(pq.size() > 10){
                pq.poll();
                }              
                }
            }
            }
        }
        List<Integer> result = new ArrayList<>();

        while(!pq.isEmpty()){
            result.add(0,pq.poll().id);
        } 
        return result;    
    }
    
    //O(1)
    public void follow(int followerId, int followeeId) {
        
        if(!follow.containsKey(followerId)){
            follow.put(followerId,new HashSet());
        }

        follow.get(followerId).add(followeeId);
    }
    
       //O(1)
    public void unfollow(int followerId, int followeeId) {
        
        if(follow.containsKey(followerId)){
            follow.get(followerId).remove(followeeId);
        }
    }
}

/**
 * Your Twitter object will be instantiated and called as such:
 * Twitter obj = new Twitter();
 * obj.postTweet(userId,tweetId);
 * List<Integer> param_2 = obj.getNewsFeed(userId);
 * obj.follow(followerId,followeeId);
 * obj.unfollow(followerId,followeeId);
 */
